<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Update Grid Image Sections</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>

  <style>
    body {
      margin: 0;
      padding-top: 70px;
      font-family: Arial, sans-serif;
      min-height: 100vh;
      background: linear-gradient(135deg, #2A7B9B, #2BE0DD, #05FFB4, #57C785);
      background-size: 400% 400%;
      animation: gradientShift 10s ease infinite;
    }

    @keyframes gradientShift {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    .navbar {
      background-color: white !important;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    }

    .navbar-brand {
      display: flex;
      align-items: center;
      gap: 12px;
      font-weight: bold;
      font-size: 20px;
    }

    .navbar-brand img {
      width: 40px;
      height: 40px;
    }

    .update-grid-container {
      padding: 40px;
    }

    .update-grid {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 24px;
      justify-items: center;
    }

    .update-card {
      background: #fff;
      border-radius: 12px;
      padding: 14px;
      width: 100%;
      max-width: 240px;
      height: 400px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      text-align: left;
      overflow: hidden;
    }

    .update-card img {
      width: 100%;
      height: 140px;
      object-fit: cover;
      object-position: center;
      border-radius: 8px;
      margin-bottom: 10px;
    }

    .update-card input[type="text"],
    .update-card textarea {
      width: 100%;
      margin-bottom: 8px;
      padding: 7px;
      font-size: 13px;
      border: 1px solid #ccc;
      border-radius: 6px;
    }

    .update-card input[type="file"] {
      margin-bottom: 10px;
    }

    .update-card textarea {
      resize: vertical;
      min-height: 50px;
      max-height: 100px;
      overflow: auto;
    }

    .update-card button {
      width: 100%;
      padding: 9px;
      background-color: #198754;
      color: white;
      border: none;
      border-radius: 6px;
      font-weight: bold;
      margin-top: auto;
      transition: background-color 0.2s ease-in-out;
    }

    .update-card button:hover {
      background-color: #146c43;
    }

    .control-panel {
      position: fixed;
      top: 70px;
      right: -320px;
      width: 280px;
      background: white;
      border-left: 2px solid #ccc;
      padding: 16px;
      box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      transition: right 0.3s ease-in-out;
    }

    .control-panel.visible {
      right: 0;
    }

    .control-panel label {
      margin-top: 10px;
      font-weight: 500;
    }
  </style>
</head>
<body>

  <!-- Updated Navbar -->
  <nav class="navbar fixed-top navbar-light bg-white border-bottom px-4">
    <div class="container-fluid">
      <div class="navbar-brand d-flex align-items-center">
        <img src="/image/Logo.png" alt="Logo" />
        <strong>Hoffman's Reptile Shop</strong>
      </div>
      <div class="d-flex ms-auto gap-3">
        <a href="/dashboard" class="btn btn-success fw-bold">Dashboard</a>
        <a href="/logout" class="btn btn-danger fw-bold">Logout</a>
      </div>
    </div>
  </nav>

  <div class="control-panel" id="controlPanel">
    <h5>Customize Layout</h5>
    <label for="boxWidth">Box Width</label>
    <input type="range" id="boxWidth" min="200" max="400" value="240">

    <label for="boxHeight">Box Height</label>
    <input type="range" id="boxHeight" min="200" max="600" value="400">

    <label for="boxOrientation">Box Orientation</label>
    <input type="range" id="boxOrientation" min="1" max="6" value="4">

    <button id="applyChanges" class="btn btn-success mt-3">Update</button>
  </div>

  <div class="container update-grid-container">
    <h2 class="mb-4 text-center text-white">Update Grid Image Sections</h2>
    <div class="update-grid" id="grid">
      <% for (let i = 0; i < 8; i++) { %>
        <form action="/grid/update/<%= i %>" method="POST" enctype="multipart/form-data" class="update-card">
          <% if (gridSections[i]) { %>
            <img src="<%= gridSections[i].image %>" alt="Grid Image <%= i + 1 %>">
            <div class="mb-2">
              <strong>Title:</strong> <%= gridSections[i].title %><br>
              <strong>Description:</strong> <%= gridSections[i].description %>
            </div>
          <% } else { %>
            <p class="text-muted">No image uploaded yet for this slot.</p>
          <% } %>

          <div class="mb-2">
            <label for="title<%= i %>" class="form-label">Title</label>
            <input type="text" name="title" id="title<%= i %>" class="form-control">
          </div>

          <div class="mb-2">
            <label for="description<%= i %>" class="form-label">Description</label>
            <textarea name="description" id="description<%= i %>" class="form-control" rows="2"></textarea>
          </div>

          <div class="mb-2">
            <label for="image<%= i %>" class="form-label">Select Image</label>
            <input type="file" name="image" id="image<%= i %>" class="form-control">
          </div>

          <button type="submit" class="btn btn-success">Update</button>
        </form>
      <% } %>
    </div>
  </div>

  <script>
    const widthSlider = document.getElementById('boxWidth');
    const heightSlider = document.getElementById('boxHeight');
    const orientationSlider = document.getElementById('boxOrientation');
    const controlPanel = document.getElementById('controlPanel');
    const updateBtn = document.getElementById('applyChanges');
    const grid = document.getElementById('grid');

    function applySettings() {
      const boxWidth = localStorage.getItem('boxWidth') || widthSlider.value;
      const boxHeight = localStorage.getItem('boxHeight') || heightSlider.value;
      const boxCols = localStorage.getItem('boxCols') || orientationSlider.value;

      widthSlider.value = boxWidth;
      heightSlider.value = boxHeight;
      orientationSlider.value = boxCols;

      document.querySelectorAll('.update-card').forEach(card => {
        card.style.width = boxWidth + 'px';
        card.style.height = boxHeight + 'px';
      });
      grid.style.gridTemplateColumns = `repeat(${boxCols}, 1fr)`;
    }

    document.getElementById('toggleControls')?.addEventListener('click', () => {
      controlPanel.classList.toggle('visible');
    });

    updateBtn.addEventListener('click', () => {
      const width = widthSlider.value;
      const height = heightSlider.value;
      const cols = orientationSlider.value;

      localStorage.setItem('boxWidth', width);
      localStorage.setItem('boxHeight', height);
      localStorage.setItem('boxCols', cols);

      applySettings();
      controlPanel.classList.remove('visible');
    });

    widthSlider.addEventListener('input', () => {
      document.querySelectorAll('.update-card').forEach(card => {
        card.style.width = widthSlider.value + 'px';
      });
    });

    heightSlider.addEventListener('input', () => {
      document.querySelectorAll('.update-card').forEach(card => {
        card.style.height = heightSlider.value + 'px';
      });
    });

    orientationSlider.addEventListener('input', () => {
      grid.style.gridTemplateColumns = `repeat(${orientationSlider.value}, 1fr)`;
    });

    window.addEventListener('DOMContentLoaded', applySettings);
  </script>

</body>
</html>
